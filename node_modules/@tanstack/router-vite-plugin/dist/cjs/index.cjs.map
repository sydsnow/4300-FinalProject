{"version":3,"file":"index.cjs","sources":["../../src/index.ts"],"sourcesContent":["import { isAbsolute, join, normalize } from 'path'\nimport { fileURLToPath, pathToFileURL } from 'url'\nimport { z } from 'zod'\nimport {\n  generator,\n  configSchema as generatorConfigSchema,\n  getConfig as getGeneratorConfig,\n} from '@tanstack/router-generator'\nimport { compileFile, makeCompile, splitFile } from './compilers'\nimport { splitPrefix } from './constants'\nimport type { Plugin } from 'vite'\n\nexport const configSchema = generatorConfigSchema.extend({\n  enableRouteGeneration: z.boolean().optional(),\n  experimental: z\n    .object({\n      enableCodeSplitting: z.boolean().optional(),\n    })\n    .optional(),\n})\n\nexport type Config = z.infer<typeof configSchema>\n\nconst CONFIG_FILE_NAME = 'tsr.config.json'\nconst debug = false as any\n\nconst getConfig = async (inlineConfig: Partial<Config>, root: string) => {\n  const config = await getGeneratorConfig(inlineConfig, root)\n\n  return configSchema.parse({ ...inlineConfig, ...config })\n}\n\nexport function TanStackRouterVite(\n  inlineConfig: Partial<Config> = {},\n): Array<Plugin> {\n  return [\n    TanStackRouterViteGenerator(inlineConfig),\n    TanStackRouterViteCodeSplitter(inlineConfig),\n  ]\n}\n\nexport function TanStackRouterViteGenerator(\n  inlineConfig: Partial<Config> = {},\n): Plugin {\n  let ROOT: string = process.cwd()\n  let userConfig: Config\n\n  const generate = async () => {\n    try {\n      await generator(userConfig)\n    } catch (err) {\n      console.error(err)\n      console.info()\n    }\n  }\n\n  const handleFile = async (file: string) => {\n    const filePath = normalize(file)\n    if (filePath === join(ROOT, CONFIG_FILE_NAME)) {\n      userConfig = await getConfig(inlineConfig, ROOT)\n      return\n    }\n    const routesDirectoryPath = isAbsolute(userConfig.routesDirectory)\n      ? userConfig.routesDirectory\n      : join(ROOT, userConfig.routesDirectory)\n    if (filePath.startsWith(routesDirectoryPath)) {\n      await generate()\n    }\n  }\n\n  return {\n    name: 'vite-plugin-tanstack-router-generator',\n    configResolved: async (config) => {\n      ROOT = config.root\n      userConfig = await getConfig(inlineConfig, ROOT)\n\n      if (userConfig.enableRouteGeneration ?? true) {\n        await generate()\n      }\n    },\n    watchChange: async (file, context) => {\n      if (userConfig.enableRouteGeneration ?? true) {\n        if (['create', 'update', 'delete'].includes(context.event)) {\n          await handleFile(file)\n        }\n      }\n    },\n  }\n}\n\nfunction fileIsInRoutesDirectory(filePath: string, routesDirectory: string) {\n  const routesDirectoryPath = isAbsolute(routesDirectory)\n    ? routesDirectory\n    : join(process.cwd(), routesDirectory)\n\n  return filePath.startsWith(routesDirectoryPath)\n}\n\nexport function TanStackRouterViteCodeSplitter(\n  inlineConfig: Partial<Config> = {},\n): Plugin {\n  let ROOT: string = process.cwd()\n  let userConfig: Config\n\n  return {\n    name: 'vite-plugin-tanstack-router-code-splitter',\n    enforce: 'pre',\n    configResolved: async (config) => {\n      ROOT = config.root\n      userConfig = await getConfig(inlineConfig, ROOT)\n    },\n    resolveId(source) {\n      if (!userConfig.experimental?.enableCodeSplitting) {\n        return null\n      }\n\n      if (source.startsWith(splitPrefix + ':')) {\n        return source.replace(splitPrefix + ':', '')\n      }\n      return null\n    },\n    async transform(code, id, transformOptions) {\n      if (!userConfig.experimental?.enableCodeSplitting) {\n        return null\n      }\n\n      const url = pathToFileURL(id)\n      url.searchParams.delete('v')\n      id = fileURLToPath(url).replace(/\\\\/g, '/')\n\n      const compile = makeCompile({\n        root: ROOT,\n      })\n\n      if (id.includes(splitPrefix)) {\n        if (debug) console.info('Splitting route: ', id)\n        // const ref = new URLSearchParams(id.split('?')[1]).get('ref') || ''\n\n        const compiled = await splitFile({\n          code,\n          compile,\n          filename: id,\n          // ref,\n        })\n\n        if (debug) console.info('')\n        if (debug) console.info('Split Output')\n        if (debug) console.info('')\n        if (debug) console.info(compiled.code)\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n\n        return compiled\n      } else if (\n        fileIsInRoutesDirectory(id, userConfig.routesDirectory) &&\n        (code.includes('createRoute(') || code.includes('createFileRoute('))\n      ) {\n        if (code.includes('@react-refresh')) {\n          throw new Error(\n            `We detected that the '@vitejs/plugin-react' was passed before '@tanstack/router-vite-plugin'. Please make sure that '@tanstack/router-vite-plugin' is passed before '@vitejs/plugin-react' and try again: \ne.g.\n\nplugins: [\n  TanStackRouterVite(), // Place this before viteReact()\n  viteReact(),\n]\n`,\n          )\n        }\n\n        if (debug) console.info('Handling createRoute: ', id)\n        const compiled = await compileFile({\n          code,\n          compile,\n          filename: id,\n        })\n\n        if (debug) console.info('')\n        if (debug) console.info('Compiled Output')\n        if (debug) console.info('')\n        if (debug) console.info(compiled.code)\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n        if (debug) console.info('')\n\n        return compiled\n      }\n\n      return null\n    },\n  }\n}\n"],"names":["generatorConfigSchema","z","getGeneratorConfig","generator","normalize","join","isAbsolute","splitPrefix","url","pathToFileURL","fileURLToPath","makeCompile","splitFile","compileFile"],"mappings":"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"}